name: Deploy ECS

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      
      - name: Checkout code
        uses: actions/checkout@v3  # Updated to v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      
      - name: Build Docker image
        run: |
          docker build -t my-spring-boot-taskmaster:${{ github.sha }} .

      
      - name: Save Docker image as tarball
        run: |
          docker save my-spring-boot-taskmaster:${{ github.sha }} -o my-spring-boot-taskmaster.tar

      
      - name: Upload Docker image artifact
        uses: actions/upload-artifact@v3  # Updated to v3
        with:
          name: docker-image
          path: my-spring-boot-taskmaster.tar
      - name: Set up AWS CLI
        uses: aws-actions/configure-aws-credentials@v3
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1 # Replace with your region

      - name: Get Git Commit SHA
        id: sha
        run: echo "SHA=$(git rev-parse --short HEAD)" >> $GITHUB_ENV

      - name: Log in to Amazon ECR
        run: |
          aws ecr get-login-password --region us-east-1 | docker login --username AWS --password-stdin ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.us-east-1.amazonaws.com

      - name: Build Docker Image
        run: docker build -t taskmaster:${{ env.SHA }} .

      - name: Tag Docker Image
        run: docker tag taskmaster:${{ env.SHA }} ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.us-east-1.amazonaws.com/taskmaster:${{ env.SHA }}

      - name: Push Docker Image to ECR
        run: docker push ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.us-east-1.amazonaws.com/taskmaster:${{ env.SHA }}
      - name: Update ECS Service
        run: |
          aws ecs update-service --cluster taskmaster-cluster --service taskmaster-service --force-new-deployment
